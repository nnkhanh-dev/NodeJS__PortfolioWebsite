<div class="bg-white p-6 rounded-lg shadow-md">
    <div class="flex flex-wrap justify-between items-center mb-4">
        <h1 class="text-2xl font-semibold">Danh S√°ch Lo·∫°i K·ªπ NƒÉng</h1>
        <a href="/admin/tech-types/create" class="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700">Th√™m Lo·∫°i K·ªπ NƒÉng</a>
    </div>
    <div class="overflow-x-auto">
        <table id="techTypeTable" class="min-w-full divide-y divide-gray-200 py-5">
            <thead class="bg-gray-100 text-gray-700">
            <tr>
                <th class="px-6 py-3 text-left text-sm font-semibold">STT</th>
                <th class="px-6 py-3 text-left text-sm font-semibold">Icon</th>
                <th class="px-6 py-3 text-left text-sm font-semibold">T√™n</th>
                <th class="px-6 py-3 text-right text-sm font-semibold">H√†nh ƒë·ªông</th>
            </tr>
            </thead>
            <tbody class="divide-y divide-gray-200 bg-white">
            {{#each techTypes}}
            <tr class="hover:bg-gray-50 transition-colors">
                <td class="px-6 py-3 text-sm text-gray-700 font-medium">{{increment @index}}</td>
                <td class="px-6 py-3">
                    <div class="w-8 h-8 text-blue-600">
                        {{{this.icon}}}
                    </div>
                </td>
                <td class="px-6 py-3 text-sm text-gray-800">{{this.name}}</td>
                <td class="px-6 py-3 text-right">
                <a href="/admin/tech-types/edit/{{this._id}}" 
                    class="inline-block bg-yellow-400 hover:bg-yellow-500 text-white text-sm font-medium px-3 py-1.5 rounded-lg transition-colors">
                    S·ª≠a
                </a>
                <a href="/admin/tech-types/delete/{{this._id}}" 
                    class="inline-block bg-red-500 hover:bg-red-600 text-white text-sm font-medium px-3 py-1.5 rounded-lg transition-colors delete-tech-type ml-2">
                    X√≥a
                </a>
                </td>
            </tr>
            {{/each}}
            </tbody>
        </table>
    </div>

</div>

<!-- DataTable Script -->
<link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/jquery.dataTables.min.css">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
<script>
    $(document).ready(function() {
       $('#techTypeTable').DataTable({
            responsive: true,
            language: {
                search: "üîç T√¨m ki·∫øm:",
                lengthMenu: "Hi·ªÉn th·ªã _MENU_ d√≤ng",
                info: "Hi·ªÉn th·ªã _START_ ƒë·∫øn _END_ tr√™n _TOTAL_ d√≤ng",
                paginate: {
                    previous: "‚Üê Tr∆∞·ªõc",
                    next: "Sau ‚Üí"
                },
                zeroRecords: "Kh√¥ng t√¨m th·∫•y d·ªØ li·ªáu"
            }
        });
    });
</script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    document.querySelectorAll('.delete-tech-type').forEach(button => {
        button.addEventListener('click', function(event) {
            event.preventDefault();
            const url = this.getAttribute('href');

            Swal.fire({
                title: 'B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a?',
                text: 'H√†nh ƒë·ªông n√†y kh√¥ng th·ªÉ ho√†n t√°c!',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'V√¢ng, x√≥a n√≥!'
            }).then((result) => {
                if (result.isConfirmed) {
                    fetch(url, {
                        method: 'DELETE'
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire('ƒê√£ x√≥a!', data.message, 'success').then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire('L·ªói!', data.message, 'error');
                        }
                    })
                    .catch(error => {
                        Swal.fire('L·ªói!', 'Kh√¥ng th·ªÉ x√≥a lo·∫°i k·ªπ nƒÉng.', 'error');
                    });
                }
            });
        });
    });
</script>